zookeeper {
}

kafka {
  bootstrap {
    servers = ["127.0.0.1:9092"]
    servers = ${?KAFKA_BOOTSTRAP_SERVERS}
    # Can set/override this via: -DKAFKA_BOOTSTRAP_SERVERS.0=host:1000 -DKAFKA_BOOTSTRAP_SERVERS.1=host:1001
  }

  acks = all # must be used in conjunction with min.insync.replicas, which can be set at broker level or (overriding) topic level
  min.insync.replicas = 2

  # Before Kafka 1.1 we would need to do the following:
  # max.in.flight.requests.per.connection = 1
  # The default is 5 - in case of retries (by default) there is a chance that messages will be sent out of order, if a batch has failed to be sent.
  # If you rely on key based ordering, this can be an issue.
  # This setting controls how many requests can be made in parallel i.e. set to 1 if you need to ensure ordering (may impact throughput)
  # Later versions of Kafka allow us to configure our producers as idempotent:
  enable.idempotence = true
  # This setting implies: acks = all; retries = MAX_INT; max.in.flight.requests.per.connection = 5
}

twitter {
  consumer {
    key = "7DT0MqBnjJDoE20JgZWmxCByd"
    secret = "7kgrKsCYmy9F2HfueRQGKb9q0TbLl459lHdQzQC38fHj0UDpEd"
  }

  access {
    key = "855435752-35cyAGZBwWAIrdJOhC0aTJqxnDing0nhErYJG55X"
    secret = "Le5eHbUC7DK669L3f6mND76WYsGHPytDMOqgCWWQz5wcr"
  }
}

elasticsearch {
  bootstrap {
    servers = ["http://127.0.0.1:9200"]
    servers = ${?ELASTIC_SEARCH_SERVERS}
    # Can set/override this via: -DELASTIC_SEARCH_SERVERS.0=http://host0:9200 -DELASTIC_SEARCH_SERVERS.1=http://host1:9200
  }
}